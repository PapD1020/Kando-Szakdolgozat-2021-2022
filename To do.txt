//Post kép
//Adatbázis véglegesítése - postType
//Post image kötelező legyen? - Mennyi legyen a min-max lengthje?

//Logout
//Többi oldalon is működik a session meg a cookie?
//Routok elrejtése, amíg nincs bejelentkezve user

//Profile updateban, hogy nem lehet ugyan az ami eddig volt
/Registrationnál ne sql adatbázis dobjon hibát ha vmi unique és mondjuk ugyan olyan user name vel próbál meg regisztrálni
//edit profile és edit article, csak bejelentkezett user tehesse. A változtatások a usernél az id alapján, az új article, hogy legyen a userhez kötve, aki csinálta


//FONTOS
LOGOUT, cokkie, token törlés
Ha megváltoztatom a bejelentkezett user adatait, akkor uagyan úgy a kijeletnkezve elérhető volt minden.


//Loginhoz modal, hogy átjön-e a successfull message a backendről.
//Protected routhoz kell ez 
function Example() {
  const [show, setShow] = useState(false);

  const handleClose = () => setShow(false);
  const handleShow = () => setShow(true);

  return (
    <>
      <Button variant="primary" onClick={handleShow}>
        Launch demo modal
      </Button>

      <Modal show={show} onHide={handleClose}>
        <Modal.Header closeButton>
          <Modal.Title>Modal heading</Modal.Title>
        </Modal.Header>
        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleClose}>
            Close
          </Button>
          <Button variant="primary" onClick={handleClose}>
            Save Changes
          </Button>
        </Modal.Footer>
      </Modal>
    </>
  );
}

render(<Example />);